import java.io.File;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @Description: Excel辅助类
 * @author zhudongyang 
 * @date 2015-10-22 
 * @version 1.0
 */
public class ToExcel {
	 /** 
     * @功能：手工构建一个简单格式的Excel 
     */  
    private static List<Student> getStudent() throws Exception  
    {  
        List list = new ArrayList();  
        SimpleDateFormat df = new SimpleDateFormat("yyyy-mm-dd");  
  
        Student user1 = new Student(1, "张三", 16, df.parse("1997-03-12"));  
        Student user2 = new Student(2, "李四", 17, df.parse("1996-08-12"));  
        Student user3 = new Student(3, "王五", 26, df.parse("1985-11-12"));  
        list.add(user1);  
        list.add(user2);  
        list.add(user3);  
  
        return list;  
    }  
  
    public static void main(String[] args) throws Exception  
    {  
    	Workbook wb = new XSSFWorkbook();  
    	Sheet sheet = wb.createSheet("学生表一");  
//        // 第四步，创建单元格，并设置值表头 设置表头居中  
//        HSSFCellStyle style = wb.createCellStyle();  
//        style.setAlignment(HSSFCellStyle.ALIGN_CENTER); // 创建一个居中格式  
  
    	Row row = sheet.createRow((short)0);
    	Cell cell = row.createCell(0);
        cell.setCellValue("学号");  
//        cell.setCellStyle(style);  
        cell = row.createCell(1);  
        cell.setCellValue("姓名");  
//        cell.setCellStyle(style);  
        cell = row.createCell(2);  
        cell.setCellValue("年龄");  
//        cell.setCellStyle(style);  
        cell = row.createCell(3);  
        cell.setCellValue("生日");  
//        cell.setCellStyle(style);  
  
        // 第五步，写入实体数据 实际应用中这些数据从数据库得到，  
        List list = ToExcel.getStudent();  
  
        for (int i = 0; i < list.size(); i++)  
        {  
            row = sheet.createRow((int) i + 1);  
            Student stu = (Student) list.get(i);  
            // 第四步，创建单元格，并设置值  
            row.createCell(0).setCellValue((double) stu.getId());  
            row.createCell(1).setCellValue(stu.getName());  
            row.createCell(2).setCellValue((double) stu.getAge());  
            cell = row.createCell(3);  
            cell.setCellValue(new SimpleDateFormat("yyyy-mm-dd").format(stu  
                    .getBirth()));  
        }  
        // 第六步，将文件存到指定位置  
        try  
        {  
        	File file = new File("D:\\newfile.xlsx");
        	if(!file.exists() && !file.isDirectory()){
        		file.createNewFile();
        	}
        	file.createNewFile();
    		FileOutputStream fout = new FileOutputStream(file);  
    		wb.write(fout);  
    		fout.close();  
        }  
        catch (Exception e)  
        {  
            e.printStackTrace();  
        }  
    }  
}
